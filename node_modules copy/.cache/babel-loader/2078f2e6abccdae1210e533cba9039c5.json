{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloRocamora/Desktop/realBeauty/src/calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CalendarHeader from './CalendarHeader';\nimport Day from './Day';\nimport NewEventModal from './NewEventModal';\nimport useDate from './useDate';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Calendar() {\n  _s();\n\n  const [nav, setNav] = useState(0);\n  const [clicked, setClicked] = useState(); //obtenemos el dia del año clickeado\n  //console.log(clicked)\n\n  const [events, setEvents] = useState(localStorage.getItem('events') ? JSON.parse(localStorage.getItem('events')) : []);\n\n  const eventForDate = date => events.find(e => e.date === date);\n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events]);\n  const {\n    days,\n    dateDisplay\n  } = useDate(events, nav);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(CalendarHeader, {\n        dateDisplay: dateDisplay,\n        onNext: () => setNav(nav + 1),\n        onPrev: () => setNav(nav - 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"weekdays\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Domingo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Lunes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Martes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Miercoles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Jueves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Viernes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sabado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"calendar\",\n        children: days.map((mapDays, index) => /*#__PURE__*/_jsxDEV(Day, {\n          day: mapDays,\n          onClick: () => {\n            if (mapDays.value !== 'padding') {\n              setClicked(mapDays.date);\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), clicked && !eventForDate(clicked) && /*#__PURE__*/_jsxDEV(NewEventModal, {\n      onClose: () => setClicked(null),\n      clicked: clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calendar, \"CWI5JU95JOhwQ50SXgz/kw6rWQQ=\", false, function () {\n  return [useDate];\n});\n\n_c = Calendar;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/gonzaloRocamora/Desktop/realBeauty/src/calendar/Calendar.js"],"names":["React","useState","useEffect","CalendarHeader","Day","NewEventModal","useDate","Calendar","nav","setNav","clicked","setClicked","events","setEvents","localStorage","getItem","JSON","parse","eventForDate","date","find","e","setItem","stringify","days","dateDisplay","map","mapDays","index","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport  CalendarHeader  from './CalendarHeader';\nimport  Day from './Day';\nimport  NewEventModal  from './NewEventModal';\n\nimport  useDate  from './useDate';\nimport './styles.css'\n\n\nexport default function Calendar  ()  {\n  const [nav, setNav] = useState(0);\n  const [clicked, setClicked] = useState();\n//obtenemos el dia del año clickeado\n  //console.log(clicked)\n  const [events, setEvents] = useState(\n    localStorage.getItem('events') ? \n      JSON.parse(localStorage.getItem('events')) : \n      []\n  );\n\n  const eventForDate = date => events.find(e => e.date === date);\n\n \n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events]);\n\n  const { days, dateDisplay } = useDate(events, nav);\n  \n  return(\n    <>\n      <div id=\"container\">\n        <CalendarHeader \n          dateDisplay={dateDisplay}\n          onNext={() => setNav(nav + 1)}\n          onPrev={() => setNav(nav - 1)}\n         \n        />\n\n        <div id=\"weekdays\">\n          <div>Domingo</div>\n          <div>Lunes</div>\n          <div>Martes</div>\n          <div>Miercoles</div>\n          <div>Jueves</div>\n          <div>Viernes</div>\n          <div>Sabado</div>\n        </div>\n\n        <div id=\"calendar\">\n          {days.map((mapDays, index) => (\n            <Day\n              key={index}\n              day={mapDays}\n              \n              onClick={() => {\n                if (mapDays.value !== 'padding') {\n                  setClicked(mapDays.date);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {\n        clicked && !eventForDate(clicked) &&\n        <NewEventModal\n          onClose={() => setClicked(null)}\n          clicked={clicked}\n         \n        />\n      }\n\n    \n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}