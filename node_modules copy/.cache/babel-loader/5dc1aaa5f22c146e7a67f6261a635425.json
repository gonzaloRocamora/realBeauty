{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloRocamora/Desktop/realBeauty/src/calendar/NewEventModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport fire from \"../firebase\";\nimport \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventModal({\n  onClose,\n  clicked\n}) {\n  _s();\n\n  const db = fire.firestore();\n  const [horas, setHoras] = useState(); //agregar data a firestore horas y dia clickeado\n\n  const saveHour = async () => {\n    console.log('horas ?', horas);\n\n    if (horas && horas != \"ninguna-opcion\") {\n      await db.collection(\"turnos\").doc().set({\n        hour: horas,\n        day: clicked\n      });\n      alert('Hemos enviado un mail de confirmacion a tu cuenta de email.');\n      onClose();\n    } else {\n      alert('Debes seleccionar una opcion FORRO!');\n    }\n  };\n\n  const [hours, setHours] = useState([8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]); //moment\n  //leer datos desde database condicion day : clicked\n\n  const getHours = () => {\n    var citiesRef = db.collection(\"turnos\");\n    var query = citiesRef.where(\"day\", \"==\", clicked);\n    query.get().then(result => {\n      //MAPEO TODOS LOS TURNOS YA ELEGIDOS PARA OBTENER UN NUEVO ARREGLO CON LOS MISMOS Y LOS PASO A NUMERO\n      const turnosMapeados = result.docs.map(item => {\n        return Number(item.data().hour);\n      });\n      console.log(turnosMapeados); //FILTRO LAS HORAS PARA QUEDARME CON LOS HORARIOS QUE NO INCLUYAN A LOS TURNOS MAPEADOS\n\n      const newHours = hours.filter(horario => {\n        return !turnosMapeados.includes(horario);\n      }); //SETEO LAS HORAS A LAS NEWHOURS QUE SON MIS HORAS FILTRADAS QUE EN LAS OPTIONS DEL SELECT MAPEE SOLO HORARIOS DISPONIBLES\n\n      setHours(newHours);\n      console.log(newHours);\n    }).catch(error => {\n      console.log(\"Error getting documents: \", error);\n    });\n  };\n\n  useEffect(() => {\n    getHours();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newEventModal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Elige un horario disponible:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setHoras(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ninguna-opcion\",\n        children: \"Selecciona una opcion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), hours.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveHour,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n/* \n<select onChange={(e) => setHoras(e.target.value)}>\n        <option>Selecciona una opcion</option>\n        {hours.map((item) => {\n          return (\n            <option key={item} value={item}>\n              {item}\n            </option>\n          );\n        })}\n      </select>*/\n\n_s(NewEventModal, \"7kHFxbgnQmR7+TACNL5RzQ0ohRM=\");\n\n_c = NewEventModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEventModal\");","map":{"version":3,"sources":["/Users/gonzaloRocamora/Desktop/realBeauty/src/calendar/NewEventModal.js"],"names":["React","useState","useEffect","fire","NewEventModal","onClose","clicked","db","firestore","horas","setHoras","saveHour","console","log","collection","doc","set","hour","day","alert","hours","setHours","getHours","citiesRef","query","where","get","then","result","turnosMapeados","docs","map","item","Number","data","newHours","filter","horario","includes","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fire from \"../firebase\";\nimport \"firebase/firestore\";\n\nexport default function NewEventModal({ onClose, clicked }) {\n  const db = fire.firestore();\n\n  const [horas, setHoras] = useState();\n\n  //agregar data a firestore horas y dia clickeado\n  const saveHour = async () => {\n    console.log('horas ?',horas)\n    \n    \n    if (horas && horas != \"ninguna-opcion\" ) {\n    \n      await db.collection(\"turnos\").doc().set({\n        hour: horas,\n        day: clicked,\n      \n      });\n      alert('Hemos enviado un mail de confirmacion a tu cuenta de email.')\n      onClose();\n    }else{\n      alert('Debes seleccionar una opcion FORRO!')\n    }\n   \n  };\n\n  const [hours, setHours] = useState([\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n  ]);\n//moment\n  //leer datos desde database condicion day : clicked\n  const getHours = () => {\n    var citiesRef = db.collection(\"turnos\");\n\n    var query = citiesRef.where(\"day\", \"==\", clicked);\n\n    query\n      .get()\n      .then((result) => {\n        //MAPEO TODOS LOS TURNOS YA ELEGIDOS PARA OBTENER UN NUEVO ARREGLO CON LOS MISMOS Y LOS PASO A NUMERO\n        const turnosMapeados = result.docs.map((item) => {\n          return Number(item.data().hour);\n        });\n        console.log(turnosMapeados);\n        //FILTRO LAS HORAS PARA QUEDARME CON LOS HORARIOS QUE NO INCLUYAN A LOS TURNOS MAPEADOS\n        const newHours = hours.filter((horario) => {\n          return !turnosMapeados.includes(horario);\n        });\n        //SETEO LAS HORAS A LAS NEWHOURS QUE SON MIS HORAS FILTRADAS QUE EN LAS OPTIONS DEL SELECT MAPEE SOLO HORARIOS DISPONIBLES\n        setHours(newHours);\n        console.log(newHours);\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getHours();\n  }, []);\n\n  return (\n    <div id=\"newEventModal\">\n      <h2>Elige un horario disponible:</h2>\n      <select onChange={(e) => setHoras(e.target.value)}>\n        <option value=\"ninguna-opcion\">Selecciona una opcion</option>\n        {hours.map((item) => {\n          return (\n            <option key={item} value={item}>\n              {item}\n            </option>\n          );\n        })}\n      </select>\n\n      <button onClick={saveHour}>save</button>\n      <button onClick={onClose}>Close</button>\n    </div>\n  );\n}\n\n/* \n<select onChange={(e) => setHoras(e.target.value)}>\n        <option>Selecciona una opcion</option>\n        {hours.map((item) => {\n          return (\n            <option key={item} value={item}>\n              {item}\n            </option>\n          );\n        })}\n      </select>*/\n"]},"metadata":{},"sourceType":"module"}