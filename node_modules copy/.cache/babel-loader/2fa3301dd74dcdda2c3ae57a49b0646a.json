{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloRocamora/Desktop/realBeauty/src/calendar/Day.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Day({\n  day,\n  onClick\n}) {\n  const className = `day ${day.value === 'padding' ? 'padding' : ''} ${day.isCurrentDay ? 'currentDay' : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: className,\n    children: [day.value === 'padding' ? '' : day.value, day.event && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: day.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Day;\n; //OBTENER TODA LA DATA DE FIRE\n\n/*\ndb.collection(\"turnos\").get().then((snapshot) => {\n      snapshot.docs.forEach(doc => {\n        console.log(doc.data)\n      })\n    })\n\n      \n      .catch((error) => {\n        console.log(\"Error getting document:\", error);\n      });\n*/\n\n/*\nconst limiter = (checked) =>{\n     \n  if(checked > 1){\n    return alert('asdfa')\n  }else{\n    return false\n  }\n  \n}\n\nuseEffect(() => {\ngetHours();\n\n\n}, []);\n\nuseEffect(() => {\nlimiter(totalCbox);\n\n}, [totalCbox])\n\n\neturn (\n          <label name='labelCheck' htmlFor=\"horas\">\n            <input name='inputCheck'\n              id=\"horas\"\n              type=\"checkbox\"\n              value={item}\n              onClick={() => setTotalCbox(totalCbox +1)}\n              onChange={(e) => setHoras(e.target.value)}\n            ></input>\n            {item}\n          </label>\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"sources":["/Users/gonzaloRocamora/Desktop/realBeauty/src/calendar/Day.js"],"names":["React","Day","day","onClick","className","value","isCurrentDay","event","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,GAAT,CAAc;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAd,EAAiC;AAC9C,QAAMC,SAAS,GAAI,OAAMF,GAAG,CAACG,KAAJ,KAAc,SAAd,GAA0B,SAA1B,GAAsC,EAAG,IAAGH,GAAG,CAACI,YAAJ,GAAmB,YAAnB,GAAkC,EAAG,EAA1G;AAEA,sBACE;AAAK,IAAA,OAAO,EAAEH,OAAd;AAAuB,IAAA,SAAS,EAAEC,SAAlC;AAAA,eACGF,GAAG,CAACG,KAAJ,KAAc,SAAd,GAA0B,EAA1B,GAA+BH,GAAG,CAACG,KADtC,EAGGH,GAAG,CAACK,KAAJ,iBAAa;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBL,GAAG,CAACK,KAAJ,CAAUC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KAXuBP,G;AAWvB,C,CAGD;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\nexport default function Day ({ day, onClick })  {\n  const className = `day ${day.value === 'padding' ? 'padding' : ''} ${day.isCurrentDay ? 'currentDay' : ''}`;\n  \n  return (\n    <div onClick={onClick} className={className}>\n      {day.value === 'padding' ? '' : day.value}\n\n      {day.event && <div className='event'>{day.event.title}</div>}\n      \n    </div>\n  );\n};\n\n\n//OBTENER TODA LA DATA DE FIRE\n/*\ndb.collection(\"turnos\").get().then((snapshot) => {\n      snapshot.docs.forEach(doc => {\n        console.log(doc.data)\n      })\n    })\n\n      \n      .catch((error) => {\n        console.log(\"Error getting document:\", error);\n      });\n*/\n/*\nconst limiter = (checked) =>{\n     \n  if(checked > 1){\n    return alert('asdfa')\n  }else{\n    return false\n  }\n  \n}\n\nuseEffect(() => {\ngetHours();\n\n\n}, []);\n\nuseEffect(() => {\nlimiter(totalCbox);\n\n}, [totalCbox])\n\n\neturn (\n          <label name='labelCheck' htmlFor=\"horas\">\n            <input name='inputCheck'\n              id=\"horas\"\n              type=\"checkbox\"\n              value={item}\n              onClick={() => setTotalCbox(totalCbox +1)}\n              onChange={(e) => setHoras(e.target.value)}\n            ></input>\n            {item}\n          </label>\n\n*/ \n\n"]},"metadata":{},"sourceType":"module"}